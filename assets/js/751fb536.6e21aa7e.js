"use strict";(self.webpackChunkcodewithpablo_docs=self.webpackChunkcodewithpablo_docs||[]).push([[234],{8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var o=n(6540);const i={},t=o.createContext(i);function r(e){const s=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(t.Provider,{value:s},e.children)}},9883:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>h,contentTitle:()=>c,default:()=>a,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"husky","title":"\ud83d\udee0 Husky Configuration","description":"This project uses Husky to enforce pre-commit and pre-push hooks, ensuring that only properly formatted and linted code is committed and pushed.","source":"@site/docs/husky.md","sourceDirName":".","slug":"/husky","permalink":"/codewithpablo-docs/docs/husky","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"\u2705 Testing with Vitest","permalink":"/codewithpablo-docs/docs/testing"},"next":{"title":"\ud83d\udcdd Commit Guidelines","permalink":"/codewithpablo-docs/docs/commits"}}');var i=n(4848),t=n(8453);const r={},c="\ud83d\udee0 Husky Configuration",h={},d=[{value:"<strong>\ud83d\udccc Husky Hooks Explained:</strong>",id:"-husky-hooks-explained",level:2},{value:"<strong>\ud83d\udd39 Commit Message Validation (<code>commit-msg</code> hook)</strong>",id:"-commit-message-validation-commit-msg-hook",level:3},{value:"<strong>\ud83d\udd39 Pre-Commit Hook (<code>pre-commit</code> hook)</strong>",id:"-pre-commit-hook-pre-commit-hook",level:3},{value:"<strong>\ud83d\udd39 Pre-Push Hook (<code>pre-push</code> hook)</strong>",id:"-pre-push-hook-pre-push-hook",level:3}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"-husky-configuration",children:"\ud83d\udee0 Husky Configuration"})}),"\n",(0,i.jsxs)(s.p,{children:["This project uses ",(0,i.jsx)(s.strong,{children:"Husky"})," to enforce pre-commit and pre-push hooks, ensuring that only properly formatted and linted code is committed and pushed."]}),"\n",(0,i.jsx)(s.h2,{id:"-husky-hooks-explained",children:(0,i.jsx)(s.strong,{children:"\ud83d\udccc Husky Hooks Explained:"})}),"\n",(0,i.jsx)(s.h3,{id:"-commit-message-validation-commit-msg-hook",children:(0,i.jsxs)(s.strong,{children:["\ud83d\udd39 Commit Message Validation (",(0,i.jsx)(s.code,{children:"commit-msg"})," hook)"]})}),"\n",(0,i.jsxs)(s.p,{children:["This hook ensures that commit messages follow the conventional commit format by running ",(0,i.jsx)(s.code,{children:"commitlint"}),"."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sh",children:'#!/bin/sh\n. "$(dirname "$0")/_/husky.sh"\nnpx --no -- commitlint --edit "$1"\n'})}),"\n",(0,i.jsxs)(s.p,{children:["\u2705 ",(0,i.jsx)(s.strong,{children:"What it does:"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Ensures commit messages follow ",(0,i.jsx)(s.a,{href:"https://www.conventionalcommits.org/en/v1.0.0/",children:(0,i.jsx)(s.strong,{children:"Conventional Commits"})}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Prevents commits con mensajes inv\xe1lidos."}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"-pre-commit-hook-pre-commit-hook",children:(0,i.jsxs)(s.strong,{children:["\ud83d\udd39 Pre-Commit Hook (",(0,i.jsx)(s.code,{children:"pre-commit"})," hook)"]})}),"\n",(0,i.jsxs)(s.p,{children:["This hook runs ",(0,i.jsx)(s.code,{children:"npm run check"})," before allowing a commit to proceed."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sh",children:'#!/usr/bin/env sh\n. "$(dirname -- "$0")/_/husky.sh"\nnpm run check\n'})}),"\n",(0,i.jsxs)(s.p,{children:["\u2705 ",(0,i.jsx)(s.strong,{children:"What it does:"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Runs ",(0,i.jsx)(s.strong,{children:"ESLint"}),", ",(0,i.jsx)(s.strong,{children:"Prettier"}),", and any additional checks before committing."]}),"\n",(0,i.jsx)(s.li,{children:"Prevents commits si el c\xf3digo no pasa las validaciones."}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"-pre-push-hook-pre-push-hook",children:(0,i.jsxs)(s.strong,{children:["\ud83d\udd39 Pre-Push Hook (",(0,i.jsx)(s.code,{children:"pre-push"})," hook)"]})}),"\n",(0,i.jsx)(s.p,{children:"This hook runs the test suite before allowing a push."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sh",children:'#!/bin/sh\n. "$(dirname "$0")/_/husky.sh"\nnpm run test -- --run\n'})}),"\n",(0,i.jsxs)(s.p,{children:["\u2705 ",(0,i.jsx)(s.strong,{children:"What it does:"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Ensures that ",(0,i.jsx)(s.strong,{children:"all tests pass"})," before pushing changes."]}),"\n",(0,i.jsx)(s.li,{children:"Prevents pushing c\xf3digo que pueda romper la aplicaci\xf3n."}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.p,{children:["By using ",(0,i.jsx)(s.strong,{children:"ESLint + Prettier + Husky"}),", we ensure a well-structured, readable, and maintainable codebase while enforcing best practices! \ud83d\ude80"]})]})}function a(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);